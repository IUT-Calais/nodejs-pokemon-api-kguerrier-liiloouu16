openapi: 3.0.0
info:
  title: Doc User API Pokemon
  version: 1.0.0
  description: API pour g√©rer les utilisateurs et leur pokemons üê¶‚Äçüî•
servers:
  - url: http://localhost:3000
    description: Serveur local
tags:
  - name: ü¶ä Pokemon
    description: Info API Pok√©mon
  - name: üë©‚Äçüíª User
    description: Info API utilisateurs

paths:
  /pokemons-cards:
    get:
      tags:
        - ü¶ä Pokemon
      summary: Liste tous les pok√©mons
      responses:
        '200':
          description: Liste des pok√©mons
    post:
      tags:
        - ü¶ä Pokemon
      summary: Cr√©e un nouveau pok√©mon
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - pokedexId
                - typeId
                - lifePoints
                - size
                - weight
                - imageUrl
              properties:
                name:
                  type: string
                pokedexId:
                  type: integer
                typeId:
                  type: integer
                lifePoints:
                  type: integer
                size:
                  type: number
                weight:
                  type: number
                imageUrl:
                  type: string
      responses:
        '201':
          description: Pok√©mon cr√©√©
        '400':
          description: Propri√©t√©s manquantes ou pok√©mon d√©j√† existant

  /pokemons-cards/{pokemonCardId}:
    get:
      tags:
        - ü¶ä Pokemon
      summary: R√©cup√®re un pok√©mon gr√¢ce √† son ID
      parameters:
        - in: path
          name: pokemonCardId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Pok√©mon trouv√©
        '400':
          description: ID invalide
        '404':
          description: Pok√©mon non trouv√©

    patch:
      tags:
        - ü¶ä Pokemon
      summary: Met √† jour un pok√©mon
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: pokemonCardId
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                pokedexId:
                  type: integer
                typeId:
                  type: integer
                lifePoints:
                  type: integer
                size:
                  type: number
                weight:
                  type: number
                imageUrl:
                  type: string
      responses:
        '200':
          description: Pok√©mon mis √† jour
        '400':
          description: ID invalide
        '404':
          description: Pokemon non trouv√©

    delete:  
      tags:
        - ü¶ä Pokemon
      summary: Supprime un pok√©mon
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: pokemonCardId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Pok√©mon supprim√©
        '400':
          description: ID invalide
 
  /users:
    get:
      tags:
        - üë©‚Äçüíª User
      summary: Liste tous les utilisateurs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Liste des utilisateurs

    post:  
      tags:
        - üë©‚Äçüíª User
      summary: Cr√©e un nouvel utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '201':
          description: Utilisateur cr√©√©
        '400':
          description: Propri√©t√©s manquantes ou utilisateur d√©j√† existant

  /users/login:
    post:  
      tags:
        - üë©‚Äçüíª User
      summary: Authentifie un utilisateur
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '201':
          description: Authentification r√©ussie, retourne un token JWT
        '400':
          description: Email ou mot de passe incorrect ou manquant
        '404':
          description: Utilisateur non trouv√©

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
